/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@list-name: 'list';
@list-x: 36px;
@list-y: 0px;
@list-offset-x: -36px;
@list-offset-y: 0px;
@list-width: 24px;
@list-height: 24px;
@list-total-width: 84px;
@list-total-height: 76px;
@list-image: '../img/sprite.png';
@list: 36px 0px -36px 0px 24px 24px 84px 76px '../img/sprite.png' 'list';
@lyric-name: 'lyric';
@lyric-x: 60px;
@lyric-y: 24px;
@lyric-offset-x: -60px;
@lyric-offset-y: -24px;
@lyric-width: 16px;
@lyric-height: 16px;
@lyric-total-width: 84px;
@lyric-total-height: 76px;
@lyric-image: '../img/sprite.png';
@lyric: 60px 24px -60px -24px 16px 16px 84px 76px '../img/sprite.png' 'lyric';
@next-name: 'next';
@next-x: 0px;
@next-y: 36px;
@next-offset-x: 0px;
@next-offset-y: -36px;
@next-width: 24px;
@next-height: 24px;
@next-total-width: 84px;
@next-total-height: 76px;
@next-image: '../img/sprite.png';
@next: 0px 36px 0px -36px 24px 24px 84px 76px '../img/sprite.png' 'next';
@play-sm-name: 'play-sm';
@play-sm-x: 24px;
@play-sm-y: 36px;
@play-sm-offset-x: -24px;
@play-sm-offset-y: -36px;
@play-sm-width: 24px;
@play-sm-height: 24px;
@play-sm-total-width: 84px;
@play-sm-total-height: 76px;
@play-sm-image: '../img/sprite.png';
@play-sm: 24px 36px -24px -36px 24px 24px 84px 76px '../img/sprite.png' 'play-sm';
@play-name: 'play';
@play-x: 0px;
@play-y: 0px;
@play-offset-x: 0px;
@play-offset-y: 0px;
@play-width: 36px;
@play-height: 36px;
@play-total-width: 84px;
@play-total-height: 76px;
@play-image: '../img/sprite.png';
@play: 0px 0px 0px 0px 36px 36px 84px 76px '../img/sprite.png' 'play';
@playing-name: 'playing';
@playing-x: 60px;
@playing-y: 0px;
@playing-offset-x: -60px;
@playing-offset-y: 0px;
@playing-width: 24px;
@playing-height: 24px;
@playing-total-width: 84px;
@playing-total-height: 76px;
@playing-image: '../img/sprite.png';
@playing: 60px 0px -60px 0px 24px 24px 84px 76px '../img/sprite.png' 'playing';
@prev-name: 'prev';
@prev-x: 60px;
@prev-y: 40px;
@prev-offset-x: -60px;
@prev-offset-y: -40px;
@prev-width: 16px;
@prev-height: 16px;
@prev-total-width: 84px;
@prev-total-height: 76px;
@prev-image: '../img/sprite.png';
@prev: 60px 40px -60px -40px 16px 16px 84px 76px '../img/sprite.png' 'prev';
@right-name: 'right';
@right-x: 0px;
@right-y: 60px;
@right-offset-x: 0px;
@right-offset-y: -60px;
@right-width: 16px;
@right-height: 16px;
@right-total-width: 84px;
@right-total-height: 76px;
@right-image: '../img/sprite.png';
@right: 0px 60px 0px -60px 16px 16px 84px 76px '../img/sprite.png' 'right';
@shuffle-name: 'shuffle';
@shuffle-x: 16px;
@shuffle-y: 60px;
@shuffle-offset-x: -16px;
@shuffle-offset-y: -60px;
@shuffle-width: 16px;
@shuffle-height: 16px;
@shuffle-total-width: 84px;
@shuffle-total-height: 76px;
@shuffle-image: '../img/sprite.png';
@shuffle: 16px 60px -16px -60px 16px 16px 84px 76px '../img/sprite.png' 'shuffle';
@volume-up-name: 'volume-up';
@volume-up-x: 32px;
@volume-up-y: 60px;
@volume-up-offset-x: -32px;
@volume-up-offset-y: -60px;
@volume-up-width: 16px;
@volume-up-height: 16px;
@volume-up-total-width: 84px;
@volume-up-total-height: 76px;
@volume-up-image: '../img/sprite.png';
@volume-up: 32px 60px -32px -60px 16px 16px 84px 76px '../img/sprite.png' 'volume-up';
@spritesheet-width: 84px;
@spritesheet-height: 76px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @list @lyric @next @play-sm @play @playing @prev @right @shuffle @volume-up;
@spritesheet: 84px 76px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
